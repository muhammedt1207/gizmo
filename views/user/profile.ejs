
<%-include('./partial/header')%>
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Change Password</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="password-form">
                    <div class="mb-3">
                        <label for="old-password" class="col-form-label">Old Password:</label>
                        <input type="password" class="form-control" id="old-password">
                    </div>
                    <div class="mb-3">
                        <label for="new-password" class="col-form-label">New Password:</label>
                        <input type="password" class="form-control" id="new-password">
                    </div>
                    <div class="mb-3">
                        <label for="confirm-password" class="col-form-label">Confirm Password:</label>
                        <input type="password" class="form-control" id="confirm-password">
                    </div>
                    <div id="password-warning" style="color: red;"></div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="validatePassword()">Change Password</button>
            </div>
        </div>
    </div>
</div>
<div class="container ">
    <br>
    <div class="row gutters-sm">
        <div class="col-md-4 mb-3 ">
            <div class="card border-0 shadow-lg">
                <div class="card-body text-center">
                    <div>
                        <div class="text-center">
                            <div class="mb-4">
                                <% if(userData.profilePhoto){%>
                                <img id="selectedAvatar" src="/profile-image/<%=userData.profilePhoto%>"
                                    class="rounded-circle" style="width: 200px; height: 200px; object-fit: cover;" alt="Profile Picture" />
                            </div>
                            <%} else{%>
                                <img id="selectedAvatar" src="/image/blank-profile-picture-973460_640.webp"
                                    class="rounded-circle" style="width: 200px; height: 200px; object-fit: cover;" alt="Profile Picture" />
                            </div>
                                <%}%>
                            <div class="mb-3">
                                
                                <div class="d-flex justify-content-center" style="margin-top: -20px;">
                                    <label for="imageInput" class="btn  btn-rounded ">
                                        <i class="fa-solid fa-camera " style="color: #000000;"></i>
                                        <input type="file" accept="image/*" id="imageInput" style="display:none;" onchange="uploadProfileImage(event)" />
                                    </label>
                                </div>
                            </div>
                        </div>
                        
                    </div>
                    <h4 class="mt-3"><%=userData.userName%></h4>
                    <p class="text-secondary mb-1"><%=userData.email%></p>
                    <p class="text-muted font-size-sm"></p>
                    <div class="d-flex flex-column">
                        <div class="wallet" style="flex-grow: 1; background-color: rgb(255, 255, 255); color: black;">
                            <a href="/user/Wallet" style="text-decoration: none;">
                                <h4 class="mt-3">Wallet : â‚¹<%=userData.wallet.amount.toFixed(2)%></h4>
                            </a>
                        </div>

                       
                        
                        <br>
                        <button type="button" class="btn btn-outline-secondary mb-2 w-100" data-bs-toggle="modal" data-bs-target="#exampleModal" data-bs-whatever="@getbootstrap">Change Password</button>
                        <a href="#"><button class="btn btn-outline-secondary mb-2 w-100">Cart</button></a>
                        <a href="/user/coupon"><button class="btn btn-outline-secondary mb-2 w-100">Coupons</button></a>
                        <a href="/user/toOrderPage"><button class="btn btn-outline-secondary mb-2 w-100">Orders</button></a>
                        <div class="card border-0 mt-3 p-2">
                            <div class="card-body text-center referral-code d-flex align-items-center">
                                <h6 class="d-inline mr-2">Referral Code:</h6>
                                <input type="text" class="form-control form-control-sm" value="http://localhost:3100/user/tosignup?ref=<%=userData._id%>" readonly>
                                <button class="btn btn-outline-secondary ml-2" onclick="copyReferralCode()">Copy </button>
                            </div>
                        </div>
                        
                    </div>
                    
                </div>
            </div>
        </div>
     <!-- ----------------------------------------- ----------------------------------  -------------------- - -->
<div class="modal fade" id="changeUsernameModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Change Username</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="username-form">
                    <div class="mb-3">
                        <label for="new-username" class="col-form-label">New Username:</label>
                        <input type="text" class="form-control" value="<%=userData.userName%>" id="new-username" required>
                    </div>
                    <div id="username-warning" style="color: red;"></div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="changeUsername()">Change Username</button>
            </div>
        </div>
    </div>
</div>
<!---------------------------------------------------------------------------------->

        <div class="col-md-8">
            <div class="card mb-3">
                <div class="card-body shadow-lg">
                    <div class="row justify-content-between">
                        <div class="col-sm-4">
                            <h6 class="mb-0">Full Name</h6>
                        </div>
                        <div class="col-sm-4 text-secondary">
                            <%=userData.userName%>
                        </div>
                        <div class="col-sm-4">
                            <a href="#" class="editProfile" data-bs-toggle="modal" data-bs-target="#changeUsernameModal">
                                <i class="fa-solid fa-pen" style="color: #000000;"></i>
                            </a>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <h6 class="mb-0">Email</h6>
                        </div>
                        <div class="col-sm-9 text-secondary">
                            <%=userData.email%>
                        </div>
                    </div>
                    <!-- <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <h6 class="mb-0">Mobile</h6>
                        </div>
                        <div class="col-sm-9 text-secondary">
                        
                        </div>
                    </div> -->
                    <hr>
                    <div class="row">
                        <% if (userData.address && userData.address.length > 0) { %>
                            <div class="col-sm-3">
                              <h6 class="mb-0">Address</h6>
                            </div>
                            <div class="col-sm-9 text-secondary">
                              <%= userData.address[0].addressLine %>
                              <br>
                              <%= userData.address[0].city %>
                              <br>
                              <%= userData.address[0].pincode %>
                              <br>
                              <%= userData.address[0].state %>
                              <br>
                              <%= userData.address[0].mobileNumber %>
                            </div>
                          <% } else { %>
                          
                            <div class="col-sm-12 text-secondary">
                              Address information is not available.
                            </div>
                          <% } %>
                          
                    </div>
                    <hr>
                    <div class="row">
                        <div class="d-flex justify-content-between">
                            <a href="/user/toManageAddress">
                                <button type="button" class="btn btn-primary">Manage Address</button>
                            </a>
                        
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="toast-container" class="toast-container position-fixed bottom-0 end-0 p-3">
    <!-- Toaster will append toasts here -->
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    function changeUsername() {
        const newUsername = document.getElementById('new-username').value;
        const usernameWarning = document.getElementById('username-warning');

        if (!newUsername) {
            usernameWarning.textContent = "New Username is required.";
        } else {
            const data = {
                newUsername: newUsername,
            };

            fetch('/user/change-username', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            })
            .then((response) => response.json())
    .then((data) => {
        if (data.success) {  // Corrected this line
            Swal.fire({
                icon: 'success',
                title: 'Username Changed Successfully!',
                showConfirmButton: false,
                timer: 1500
            });
            $('#changeUsernameModal').modal('hide');
            console.log('Username changed successfully');
        } else {
            usernameWarning.textContent = 'Username change failed.';
        }
    })

            .catch((error) => {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message
                });
            });
        }
    }
</script>


<script>
     function uploadProfileImage(event) {
        const fileInput = event.target;

        if (fileInput.files && fileInput.files[0]) {
            const formData = new FormData();
            formData.append('profileImage', fileInput.files[0]);

            fetch('/user/uploadProfileImage', {
                method: 'POST',
                body: formData,
            })
            .then(response => {
                if (response.ok) {
                    console.log('File uploaded successfully.');
                    window.location.reload();
                } else {
                    console.error('File upload failed.');
                }
            })
            .catch(error => console.error('Error uploading file:', error));
        }
    }
    function copyReferralCode() {
        const referralCode = document.querySelector('.referral-code input').value;

        const tempInput = document.createElement('input');
        tempInput.value = referralCode;
        document.body.appendChild(tempInput);

        tempInput.select();
        document.execCommand('copy');

        document.body.removeChild(tempInput);

        const toastContainer = document.getElementById('toast-container');
        const toast = new bootstrap.Toast(toastContainer, {
            animation: true,
            autohide: true,
            delay: 2000
        });

        toast.show();
    }
    function validatePassword() {
            const oldPassword = document.getElementById('old-password').value;
            const newPassword = document.getElementById('new-password').value;
            const confirmPassword = document.getElementById('confirm-password').value;
            const passwordWarning = document.getElementById('password-warning');

            if (!oldPassword) {
                passwordWarning.textContent = "Old Password is required.";
            } else if (!newPassword) {
                passwordWarning.textContent = "New Password is required.";
            } else if (newPassword !== confirmPassword) {
                passwordWarning.textContent = "New and Confirm passwords do not match.";
            } else if (newPassword.length < 8 || !/[0-9]/.test(newPassword) || !/[A-Z]/.test(newPassword) || !/[a-z]/.test(newPassword) || !/[$&+,:;=?@#|'<>.^*()%!-]/.test(newPassword)) {
                passwordWarning.textContent = "Password should contain at least one uppercase letter, one lowercase letter, a special character (@#$%^&+=!), and a number. Password length should be between 8 and 20 characters.";
            } else {
                // Create a data object to send to the backend
                const data = {
                    oldPassword: oldPassword,
                    newPassword: newPassword,
                };

                // Make a POST request to the backend API
                fetch('/user/change-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                })
                .then((response) => response.json())
                .then((response) => {
                    if (response.success) {
                        Swal.fire({
            icon: 'success',
            title: 'Password Changed Successfully!',
            showConfirmButton: false,
            timer: 1500
        });
                        $('#exampleModal').modal('hide');
                        console.log('Password changed successfully');
    }else if(response.success==false){
        Swal.fire({
            icon: 'error',
            title: response.error,
            showConfirmButton: false,
            timer: 1500
        });
    
                    } else {
                        // Password change failed, display an error message
                        passwordWarning.textContent = 'Password change failed.';
                    }
                })
                .catch((error) => {
                    Swal.fire({
            icon: 'error',
            title: 'Error',
            text: data.message
        });
                });
            }
        }
</script>

<script src="/script/address.js"></script>
<%-include('./partial/footer')%>
</body>
</html>
