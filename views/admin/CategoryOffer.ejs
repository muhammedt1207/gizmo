<%-include('./partial/header')%>
    <h1>Category Offer</h1>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal"
        data-bs-whatever="@getbootstrap">Add Offer</button>

    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">New message</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="couponForm">
                        <div class="mb-3">
                            <label for="recipient-name" class="col-form-label">Select Category</label>
                            <select class="form-control" id="categorySelect" name="category" required>
                                <option value="" selected disabled>Select a Category</option>
                                <% categoryData.forEach(category=> { %>
                                    <option value="<%= category._id %>">
                                        <%= category.CategoryName %>
                                    </option>
                                    <% }); %>
                            </select>
                            <span class="error" id="categoryError" style="color: red;"></span>
                        </div>

                        <div class="mb-3">
                            <label for="percentage" class="col-form-label">Percentage</label>
                            <input type="number" class="form-control" id="percentage" name="percentage">
                            <span class="error" id="percentageError" style="color: red;"></span>
                        </div>

                        <div class="mb-3">
                            <label for="startDate" class="col-form-label">Start Date:</label>
                            <input type="date" class="form-control" id="startDate" name="startDate" required>
                            <span class="error" id="startDateError" style="color: red;"></span>
                        </div>

                        <div class="mb-3">
                            <label for="endDate" class="col-form-label">End Date:</label>
                            <input type="date" class="form-control" id="endDate" name="endDate" required>
                            <span class="error" id="endDateError" style="color: red;"></span>
                        </div>

                        <button type="button" class="btn btn-primary" onclick="submitForm()">Submit</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <br>
    <div class="row p-3">

        <% offerData.forEach((data)=>{%>
        <div class="col-md-4">
            <div class="card mb-4 shadow">
                <div class="card-body text-center bg-light">
                    <h5 class="card-title">
                        <img src="/image/pngfind.com-offer-tag-icon-png-6701318.png" style="width: 150px; color: brown;"
                            alt="">
                    </h5>
                    <h6 class="card-subtitle mb-2 text-muted"><b>
                        </b></h6>
                    <p class="card-text">Category Name :<b><%=data.categoryName%></b>
                    </p>
                    <p class="card-text">Discount Percentage: <b><%=data.percentage%>%</b>
                    </p>
                    <p class="card-text">Coupon Type : <b><%= new Date(data.startDate).toLocaleDateString() %></b>
                    </p>
                    <p class="card-text">End Date :<b><%= new Date(data.expireDate).toLocaleDateString() %></b>
                    </p>
                    <a href="#" class="text-white" onclick="confirmDelete('<%= data._id %>')">
                        <i class="fa-solid fa-trash fa-xl" style="color: #000000;"></i>
                    </a>
                    
                    <!-- <a href="">&nbsp;<i class="fa-solid fa-pen-to-square fa-lg" style="color: #000000;"></i></a> -->
                </div>
            </div>
        </div>
        <% }) %>

    </div>
   <!-- Include SweetAlert in your HTML file -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    async function submitForm() {
        const categorySelect = document.getElementById('categorySelect');
        const percentage = document.getElementById('percentage');
        const startDate = document.getElementById('startDate');
        const endDate = document.getElementById('endDate');

        const currentDate = new Date().toISOString().split('T')[0];

        document.getElementById('categoryError').innerText = '';
        document.getElementById('percentageError').innerText = '';
        document.getElementById('startDateError').innerText = '';
        document.getElementById('endDateError').innerText = '';

        let isValid = true;

        if (!categorySelect.value) {
            document.getElementById('categoryError').innerText = 'Category is required';
            isValid = false;
        }

        if (isNaN(percentage.value) || percentage.value < 1 || percentage.value > 99) {
            document.getElementById('percentageError').innerText = 'Percentage must be a number between 1 and 99';
            isValid = false;
        }

        if (startDate.value < currentDate) {
            document.getElementById('startDateError').innerText = 'Start date must be greater than the current date';
            isValid = false;
        }

        if (endDate.value <= startDate.value) {
            document.getElementById('endDateError').innerText = 'End date must be greater than the start date';
            isValid = false;
        }

        if (isValid) {
            try {
                const data = {
                    category: categorySelect.value,
                    percentage: percentage.value,
                    startDate: startDate.value,
                    endDate: endDate.value
                };

                const response = await fetch('/admin/addOffer', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data),
            });

            const responseData = await response.json();

            if (responseData.success) {
                console.log("Response from server:", responseData.message);
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: responseData.message,
                });
                setTimeout=>{

                }

            } else {
                console.error('Form submission error:', responseData.message);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: responseData.message,
                });
            }
        } catch (error) {
            console.error('Error:', error.message);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred. Please try again later.',
            });
            }
        }
    }
    function confirmDelete(couponId) {
        Swal.fire({
            title: 'Delete Coupon?',
            text: 'Are you sure you want to delete the coupon?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/admin/deleteOffer/${couponId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                    });

                    const responseData = await response.json();

                    if (responseData.success) {
                        Swal.fire(
                            'Deleted!',
                            'Your coupon has been deleted.',
                            'success'
                        );
                        window.location.reload();
                    } else {
                        console.error('Delete error:', responseData.message);
                        Swal.fire(
                            'Error!',
                            'Failed to delete the coupon.',
                            'error'
                        );
                    }

                } catch (error) {
                    console.error('Error:', error.message);
                    Swal.fire(
                        'Error!',
                        'An error occurred while deleting the coupon.',
                        'error'
                    );
                }
            }
        });
      
    }
</script>


    <%-include('./partial/footer')%>