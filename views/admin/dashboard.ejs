<%-include('./partial/header') %>



  
  <!-- Modal -->
  <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="staticBackdropLabel">Select Date Range</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            <form id="salesReport" method="post" action="/admin/download-sales-report">
            <label for="startDate">Start Date:</label>
            <input type="date" name="startDate" id="startDate" required>
            <label for="endDate">End Date:</label>
            <input type="date" name="endDate" id="endDate" required>
           
            <div class="row mt-5">
                <div class="col-sm-6"> 
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="downloadFormat" value="pdf" id="pdfCheckbox" checked>
                        <label class="form-check-label" for="pdfCheckbox">
                            PDF
                        </label>
                    </div>
                </div>
                <div class="col-sm-6"> 
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="downloadFormat" value="excel" id="excelCheckbox">
                        <label class="form-check-label" for="excelCheckbox">
                            Excel
                        </label>
                    </div>
                </div>
            </div>
            
            

        </div>
        
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-dark" id="generateReportBtn">Generate Report</button>
        </div>
        
    </form>

      </div>
    </div>
  </div>

            
            <div class="details ">
                <div class="recentOrders">
                    <div class="cardHeader">
                        <h1>Dashboard</h1>
                        <button type="button"  data-bs-toggle="modal" data-bs-target="#staticBackdrop" class="btn btn-dark">Download Sales Report</button>

                    </div>

                    <div class="container mt-4">
                        <div class="row">
                          <div class="col-lg-12">
                              <div class="card mb-4 shadow" style="background-color: #fff;">
                                <h2 class="card-header">Sales Analysis</h2>
                                <div class="card-body">
                                  <div class="row">
                                      <div class="dropdown">
                                          <button class="btn btn-secondary dropdown-toggle" type="button" id="timeIntervalDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                            By Day
                                          </button>
                                          <ul class="dropdown-menu" aria-labelledby="timeIntervalDropdown">
                                            <li><a class="dropdown-item" id="byDayOption">By Day</a></li>
                                            <li><a class="dropdown-item" id="byMonthOption">By Month</a></li>
                                            <li><a class="dropdown-item" id="byYearOption">By Year</a></li>
                                          </ul>
                                        </div>
                                    <div class="col-lg-12">
                                      <canvas id="salesGraphAmount"></canvas>
                                    </div>
                                    <div class="col-lg-12">
                                        <canvas id="salesGraphCount"></canvas>
                                       
                                      </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                            
                      
                      
                          <div class="col-lg-12">
                              <div class="card shadow" style="background-color: #fff;">
                                  <h2 class="card-header">Best Sellers</h2>
                                  <div class="card-body">
                                      <div class="table-responsive">
                                          <table class="table table-borderless">
                                              <thead>
                                                  <tr>
                                                      <th>Product Image</th>
                                                      <th>Product</th>
                                                      <th>Product Name</th>
                                                      <th>Price</th>
                                                      <th>Status</th>
                                                      <th>Sold</th>
                                                  </tr>
                                              </thead>
                                              <tbody id="bestSellersTable">
                                              </tbody>
                                          </table>
                                      </div>
                                  </div>
                              </div>
                          </div>
                        </div>
                      </div>

                </div> 
                
            </div>

            <style>
                .header {
                background-color: #000000;
                color: #fff;
                padding: 20px;
                text-align: center;
                min-height: 80px; 
              }
             
              
                .container {
                  display: flex;
                  flex-wrap: wrap;
                  justify-content: space-between;
                  padding: 20px;
                }
              
                .card {
                  background-color: #fff;
                  padding: 20px;
                  border-radius: 8px;
                  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
                  margin-bottom: 20px;
                  flex: 1;
                }
              
                .graph {
                  margin-right: 0;
                }
              
                .table-responsive {
                  overflow-x: auto;
                }
              </style>
              
            


        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
              
<script>

    updateSalesGraph("day");
document.getElementById("byDayOption").addEventListener("click", function() {
    document.getElementById("timeIntervalDropdown").textContent = "By Day";
    updateSalesGraph("day");
});


document.getElementById("byMonthOption").addEventListener("click", function() {
    document.getElementById("timeIntervalDropdown").textContent = "By Month";
    updateSalesGraph("month");
});

document.getElementById("byYearOption").addEventListener("click", function() {
    document.getElementById("timeIntervalDropdown").textContent = "By Year";
    updateSalesGraph("year");
});


async function fetchSalesData(timeInterval) {
    try {
        let response;
        if (timeInterval === "day") {
             response = await fetch('/admin/count-orders-by-day');
        } else if (timeInterval === "month") {
          
            response = await fetch(`/admin/count-orders-by-${timeInterval}`);
        } else if (timeInterval === "year") {
          
            response = await fetch(`/admin/count-orders-by-${timeInterval}`);
        } else {
            return false;
        }
        
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
      
        const data = await response.json();
       
       
        return data;
    } catch (error) {
        console.error("Error fetching data:", error);
    }
}



async function fetchOrdersAndSales() {
    try {

      const response = await fetch("/admin/latestOrders");
      if (!response.ok) {
          throw new Error("Network response was not ok");
        }
        const data = await response.json();
       
      return data;
    } catch (error) {
      console.log("Error fetching data", error);
    }
  }




async function updateSalesGraph(timeInterval) {
    const salesData = await fetchSalesData(timeInterval);
    const Amount = document.getElementById("salesGraphAmount").getContext("2d");
    const Count = document.getElementById("salesGraphCount").getContext("2d");

    if (window.myChart1) {
        window.myChart1.destroy();
    }
    if (window.myChart2) {
        window.myChart2.destroy();
    }

    window.myChart1 = new Chart(Amount, {
        type: "line",
        data: {
            labels: salesData.labelsByCount,
            datasets: [{ 
                label: "Sales by orders",
                data: salesData.dataByCount,
                borderColor: "red",
                fill: false
            }]
        },
        options: {
            legend: { display: false },
        }
    });
    
    const barColors = ["green"];
    window.myChart2 = new Chart(Count, {
        type: "bar",
        data: {
            labels: salesData.labelsByAmount,
            datasets: [
                {
                    label: "Sales by Amount",
                    data: salesData.dataByAmount,
                    backgroundColor: barColors,
                    borderColor: "white",
                    borderWidth: 3,
                },
            ],
        },
        options: {
            scales: {
                x: [{
                    grid: {
                        display: true
                    }
                }],
                y: [{
                    beginAtZero: true,
                    maxTicksLimit: 6
                }]
            }
        },
    });

}



async function updateLatestOrdersAndBestSellers() {
    const data = await fetchOrdersAndSales();
    const latestOrdersTable = document.getElementById("latestOrdersTable");
    const bestSellersTable = document.getElementById("bestSellersTable");
    const ordersData = data.latestOrders;
    const bestSellersData = data.bestSeller;
    console.log("Orders Data:", ordersData);
console.log("Best Sellers Data:", bestSellersData);
console.log("Latest Orders Table:", latestOrdersTable);
console.log("Best Sellers Table:", bestSellersTable);

   

    bestSellersData.forEach((seller) => {
        const row = bestSellersTable.insertRow();
        const productImageCell = row.insertCell(0);
        const productCell = row.insertCell(1);
        const productNameCell = row.insertCell(2);
        const priceCell = row.insertCell(3);
        const statusCell = row.insertCell(4);
        const salesCell = row.insertCell(5);

        const imgElement = document.createElement("img");
        const imageUrl = "/product-image/" + seller.productDetails.images[0];
        imgElement.src = imageUrl;
        imgElement.style.maxWidth = "50px";
        productImageCell.appendChild(imgElement);
        console.log(seller.productDetails._id);
        console.log(seller.productDetails.ProductName);
        console.log(seller.productDetails.DiscountAmount);
        console.log(seller.productDetails.AvailableQuantity);
        console.log(seller.totalCount);
        productCell.textContent = seller.productDetails._id; 
        productNameCell.textContent = seller.productDetails.ProductName; 
        priceCell.textContent = seller.productDetails.DiscountAmount; 
        statusCell.textContent = seller.productDetails.AvailableQuantity === 0 ? "Out of Stock" : "In Stock";
        salesCell.textContent = seller.totalCount;
    });
}



updateSalesGraph();
updateLatestOrdersAndBestSellers();



</script>



    <%-include('./partial/footer') %>
